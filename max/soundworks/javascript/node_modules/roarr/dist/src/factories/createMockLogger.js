"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMockLogger = void 0;
const constants_1 = require("../constants");
const createMockLogger = (onMessage, parentContext) => {
    const log = () => {
        return undefined;
    };
    log.adopt = async (routine) => {
        return routine();
    };
    log.child = (context) => {
        return (0, exports.createMockLogger)(onMessage, parentContext);
    };
    log.getContext = () => {
        return {};
    };
    log.trace = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.trace,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    log.debug = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.debug,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    log.info = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.info,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    log.warn = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.warn,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    log.error = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.error,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    log.fatal = (a, b, c, d, e, f, g, h, i, j) => {
        log.child({
            logLevel: constants_1.logLevels.fatal,
        })(a, b, c, d, e, f, g, h, i, j);
    };
    return log;
};
exports.createMockLogger = createMockLogger;
