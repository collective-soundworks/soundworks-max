"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UPDATE_RESPONSE = exports.UPDATE_REQUEST = exports.UPDATE_NOTIFICATION = exports.UPDATE_ABORT = exports.SERVER_ID = exports.OBSERVE_RESPONSE = exports.OBSERVE_REQUEST = exports.OBSERVE_NOTIFICATION = exports.DETACH_RESPONSE = exports.DETACH_REQUEST = exports.DETACH_ERROR = exports.DELETE_SCHEMA = exports.DELETE_RESPONSE = exports.DELETE_REQUEST = exports.DELETE_NOTIFICATION = exports.DELETE_ERROR = exports.CREATE_RESPONSE = exports.CREATE_REQUEST = exports.CREATE_ERROR = exports.ATTACH_RESPONSE = exports.ATTACH_REQUEST = exports.ATTACH_ERROR = void 0;
exports.idGenerator = idGenerator;
exports.rejectRequest = rejectRequest;
exports.resolveRequest = resolveRequest;
exports.storeRequestPromise = storeRequestPromise;
// id of the server when owner of a state
const SERVER_ID = -1;
exports.SERVER_ID = SERVER_ID;
const CREATE_REQUEST = 's:c:req';
exports.CREATE_REQUEST = CREATE_REQUEST;
const CREATE_RESPONSE = 's:c:res';
exports.CREATE_RESPONSE = CREATE_RESPONSE;
const CREATE_ERROR = 's:c:err';
exports.CREATE_ERROR = CREATE_ERROR;
const DELETE_REQUEST = 's:dl:req';
exports.DELETE_REQUEST = DELETE_REQUEST;
const DELETE_RESPONSE = 's:dl:res';
exports.DELETE_RESPONSE = DELETE_RESPONSE;
const DELETE_ERROR = 's:dl:err';
exports.DELETE_ERROR = DELETE_ERROR;
const DELETE_NOTIFICATION = 's:dl:not';
exports.DELETE_NOTIFICATION = DELETE_NOTIFICATION;
const ATTACH_REQUEST = 's:a:req';
exports.ATTACH_REQUEST = ATTACH_REQUEST;
const ATTACH_RESPONSE = 's:a:res';
exports.ATTACH_RESPONSE = ATTACH_RESPONSE;
const ATTACH_ERROR = 's:a:err';
exports.ATTACH_ERROR = ATTACH_ERROR;
const DETACH_REQUEST = 's:dt:req';
exports.DETACH_REQUEST = DETACH_REQUEST;
const DETACH_RESPONSE = 's:dt:res';
exports.DETACH_RESPONSE = DETACH_RESPONSE;
const DETACH_ERROR = 's:dt:err';
exports.DETACH_ERROR = DETACH_ERROR;
const OBSERVE_REQUEST = 's:o:req';
exports.OBSERVE_REQUEST = OBSERVE_REQUEST;
const OBSERVE_RESPONSE = 's:o:res';
exports.OBSERVE_RESPONSE = OBSERVE_RESPONSE;
const OBSERVE_NOTIFICATION = 's:o:not';
exports.OBSERVE_NOTIFICATION = OBSERVE_NOTIFICATION;
const UPDATE_REQUEST = 's:u:req';
exports.UPDATE_REQUEST = UPDATE_REQUEST;
const UPDATE_RESPONSE = 's:u:res';
exports.UPDATE_RESPONSE = UPDATE_RESPONSE;
const UPDATE_ABORT = 's:u:ab';
exports.UPDATE_ABORT = UPDATE_ABORT;
const UPDATE_NOTIFICATION = 's:u:not';
exports.UPDATE_NOTIFICATION = UPDATE_NOTIFICATION;
const DELETE_SCHEMA = 's:d:s';
exports.DELETE_SCHEMA = DELETE_SCHEMA;

function* idGenerator() {
  for (let i = 0; true; i++) {
    yield i;
  }
}

const generateRequestId = idGenerator();
const requestPromises = new Map();

function storeRequestPromise(resolve, reject) {
  const reqId = generateRequestId.next().value;
  requestPromises.set(reqId, {
    resolve,
    reject
  });
  return reqId;
}

function resolveRequest(reqId, data) {
  const {
    resolve
  } = requestPromises.get(reqId);
  requestPromises.delete(reqId);
  resolve(data);
}

function rejectRequest(reqId, data) {
  const {
    resolve,
    reject
  } = requestPromises.get(reqId);
  requestPromises.delete(reqId);
  reject(data);
}